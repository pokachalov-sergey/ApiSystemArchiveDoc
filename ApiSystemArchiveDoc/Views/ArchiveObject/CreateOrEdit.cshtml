@using System.Text
@using ApiSystemArchiveDoc.Models
@using Microsoft.CodeAnalysis.Differencing
@model ApiSystemArchiveDoc.Models.ArchiveObjectCreateOrEditModel

@{
    ViewBag.Title = "Создать";
}
<h2>Создать объект</h2>
<div class="row">
    <label class="control-label col-md-6">Статус: @Model.StatusStr</label>
</div>
@if (!String.IsNullOrEmpty(@Model.CreateUser))
{
    <div class="row">
        <label class="control-label col-md-4">Создал: @Model.CreateUser</label>
        <label class="control-label col-md-4">Дата создания: @Model.CreateDateTime</label>
    </div>
}
@if (!String.IsNullOrEmpty(@Model.EditUser))
{
    <div class="row">
        <label class="control-label col-md-4">Изменил: @Model.EditUser</label>
        <label class="control-label col-md-4">Дата последнего изменения: @Model.EditDateTime</label>
    </div>
}
<hr/>

@using (Html.BeginForm("Create", "ArchiveObject"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-10 row">
            <label class="control-label col-md-2">Вид задания</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ObjectTaskType, selectList: Model.TaskTypes, htmlAttributes: new { @class = "form-control" }, optionLabel: "Выберите вид задания")
                @Html.ValidationMessageFor(model => model.ObjectTaskType, "", new { @class = "text-danger" })
            </div>
        
            <label class="control-label col-md-2">Тип объекта</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ObjectType, selectList: Model.ObjectTypes, htmlAttributes: new { @class = "form-control" }, optionLabel: "Выберите тип объекта")
                @Html.ValidationMessageFor(model => model.ObjectType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-10 row">
      
            <label class="control-label col-md-2">Плошадь</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Square, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <label class="control-label col-md-2">Кадастровый квартал</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.KudKvartal, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            
        </div>

        <div class="form-group col-md-10 row">
            <label class="control-label col-md-2">ОКАТО:</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Okato, new
                {
                    htmlAttributes = new { @class = "form-control", autocomplete = "on", type = "number" }
                })
            </div>
            <label class="control-label col-md-2">ОКТМО:</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Oktmo, new
                {
                    htmlAttributes = new { @class = "form-control", autocomplete = "on", type = "number" }
                })
            </div>
        </div>

        <div class="form-group col-md-10 row">
            <label class="control-label col-md-2">Регион:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Район в регионе:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Город/г.о.:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Н.п.:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Settlement, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Район:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CityDistrict, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Улица:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-md-10 row">

            <label class="control-label col-md-2">Номер з.у.:</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Stead,
                    new
                    {
                        htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "number" }
                    })
            </div>


            <label class="control-label col-md-2">Номер дома:</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.House, new
                {
                    htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "number" }
                })
            </div>
        </div>
        <div class="form-group col-md-10 row">

            <label class="control-label col-md-1">Корпус:</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Block, new
                {
                    htmlAttributes = new { @class = "form-control" }
                })
            </div>
            @* </div> *@
            @* <div class="form-group col-md-10 row"> *@

            <label class="control-label col-md-1">Этаж:</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @* </div> *@
            @* <div class="form-group col-md-10 row"> *@

            <label class="control-label col-md-2">Номер помещения:</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Flat, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        
        
        
        @* <div class="form-group"> *@
        @*     <label class="control-label col-md-2">Адрес</label> *@
        @*     <div class="input-group mb-3 col-md-8"> *@
        @*         $1$ @if (!string.IsNullOrEmpty(Model.FullAddress)) #1# *@
        @*         $1$ { #1# *@
        @*         $1$     @Html.EditorFor(model => model.FullAddress, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } }) #1# *@
        @*         $1$     <div class="input-group-append"> #1# *@
        @*         $1$         <button type="button" class="btn btn-outline-danger" data-toggle="modal" #1# *@
        @*         $1$                 data-target="#address-modal"> #1# *@
        @*         $1$             Измеить адрес #1# *@
        @*         $1$         </button> #1# *@
        @*         $1$         $2$ @Html.ActionLink("Измеить адрес", "Edit", "ArchiveObjectAddress", new { id = Model.ArchiveObject.Address.Id }, new #2# #1# *@
        @*         $1$         $2$ { #2# #1# *@
        @*         $1$         $2$     @class = " btn btn-outline-danger", #2# #1# *@
        @*         $1$         $2$     role = "button" #2# #1# *@
        @*         $1$         $2$ }) #2# #1# *@
        @*         $1$     </div> #1# *@
        @*         $1$ } #1# *@
        @*         $1$ else #1# *@
        @*         $1$ { #1# *@
        @*         $1$     @if (Model.Id != null && Model.Id != Guid.Empty) #1# *@
        @*         $1$     { #1# *@
        @*         $1$         @Html.EditorFor(model => model.FullAddress, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } }) #1# *@
        @*         $1$         <div class="input-group-append"> #1# *@
        @*         $1$             <button type="button" class="btn btn-outline-danger" data-toggle="modal" #1# *@
        @*         $1$                     data-target="#address-modal"> #1# *@
        @*         $1$                 Добавть адрес #1# *@
        @*         $1$             </button> #1# *@
        @*         $1$         </div> #1# *@
        @*         $1$     } #1# *@
        @*         $1$     else #1# *@
        @*         $1$     { #1# *@
        @*         $1$         @Html.EditorFor(model => model.FullAddress, new #1# *@
        @*         $1$         { #1# *@
        @*         $1$             htmlAttributes = new #1# *@
        @*         $1$             { #1# *@
        @*         $1$                 @class = "form-control", disabled = "disabled", placeholder = "Сначала требуется сохранить запись об объекте" #1# *@
        @*         $1$             } #1# *@
        @*         $1$         }) #1# *@
        @*         $1$         <div class="input-group-append"> #1# *@
        @*         $1$             <button type="button" class="btn btn-outline-danger" data-toggle="modal" #1# *@
        @*         $1$                     data-target="#address-modal"> #1# *@
        @*         $1$                 Добавть адрес #1# *@
        @*         $1$             </button> #1# *@
        @*         $1$         </div> #1# *@
        @*         $1$     } #1# *@
        @*         $1$ } #1# *@
        @*     </div> *@
            @* <div class="col-md-8"> *@
            @* </div> *@
       
        <hr>
        <p></p>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#file-modal">
            Прикрепить файлы
        </button>
        <hr/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <div class="btn-group" role="group" aria-label="...">
                    <input type="submit" value="Сохранить" class="btn btn-outline-danger"/>
                    <button class="back  btn btn-outline-success" type="reset" href="#">Отмена</button>
                </div>
            </div>
        </div>
    </div>
}

@* Модальное окно формирования адреса *@
<div class="modal fade" id="address-modal" tabindex="-1" role="dialog" aria-labelledby="address-modal-label"
     aria-hidden="true" style="max-width: 80%; width: 80%">
    <div class="modal-dialog" role="document" style="max-width: 80%; width: 80%">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="file-modal-label">Сформировать/изменить адрес объекта недвижимости</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label class="control-label col-md-4">Статус: @Model.StatusStr</label>
                @if (@Model.FullAddress != null)
                {
                    <div class="row">
                        <label class="control-label col-md-4">Создал: @Model.CreateUser</label>
                        <label class="control-label col-md-4">Дата
                            создания: @Model.CreateDateTime</label>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.EditUser))
                    {
                        <div class="row">

                            <label
                                class="control-label col-md-4">Изменил: @Model.EditUser</label>
                            <label class="control-label col-md-4">Дата последнего
                                изменения: @Model.EditDateTime</label>
                        </div>
                    }
                }
                @* form *@
                <form id="saveAddress">
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new
                        {
                            @class = "text-danger",
                        })
                        
                    </div>

                    <hr/>
                    <div class="form-group col-md-10 row">

                        <div class="col-md-offset-2 col-md-8">
                            <div class="btn-group" role="group" aria-label="...">
                                <input  value="Сохранить" class="btn btn-outline-danger"/>
                                <button class="back  btn btn-outline-success" type="reset" href="#">Отмена</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="file-modal" tabindex="-1" role="dialog" aria-labelledby="file-modal-label"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="file-modal-label">Загрузить файл</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="uploadFile" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="file-input">Выберите файл</label>
                        <input type="file" class="form-control-file" id="file-input" name="file">
                    </div>
                    <div class="form-group">
                        <label for="file-type">Тип файла</label>
                            @Html.DropDownList("doctypeId", Model.DocumentTypes,
                            htmlAttributes: new { @class = "form-control", @id = "file-type" }, optionLabel: "Выберите тип документа")
                        @* </select> *@
                    </div>
                    <div class="form-group">
                        <label for="file-category">Категория</label>
                        <input type="text" class="form-control" id="file-category" name="fileCategory">
                    </div>
                    <div class="form-group">
                        <input type="hidden" class="form-control-file" id="storeObject-Id" name="storeObjectId">
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Загрузить</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Отмена</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("storeObject-Id").value = @Model.Id;

    $('.back').click(function () {
        window.history.back();
    });
    $(function () {
        $('#uploadFile').on('submit', function (e) {
            e.preventDefault();
            var formData = new FormData();
            formData.append("file", $('#file-input')[0].files[0]);
            formData.append("fileType", $('#file-type')[0].value);
            formData.append("fileCategory", $('#file-category')[0].value);
            formData.append("storeObjectId", @Model.Id);
            $.ajax({
                type: 'post',
                url: '/File/UploadFile',
                data: formData,
                enctype: 'multipart/form-data',
                processData: false,
                contentType: false,
                success: function (response) {

                    alert(response);
                }

            });
            e.preventDefault();
        });
    });
    document.getElementById("storeObject-Id").value = @Model.Id;
</script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>