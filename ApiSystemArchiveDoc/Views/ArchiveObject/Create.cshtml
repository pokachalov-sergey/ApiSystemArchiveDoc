@model ApiSystemArchiveDoc.Models.ArchiveDocumentObjectEditModel

@{
    ViewBag.Title = "Создать";
}

<h2>Создать объект</h2>

<h2> Дата создания: @Html.DisplayFor(m => @DateTime.Now)</h2>
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @*@Html.HiddenFor(m => m.Ticket.Id)
        @Html.HiddenFor(m => m.Ticket.StatusId)
        @Html.HiddenFor(m => m.Ticket.IsLock)
        @Html.HiddenFor(m => m.Ticket.IsReserved)
        @Html.HiddenFor(m => m.Ticket.IsLive)
        @Html.HiddenFor(m => m.Ticket.isClosed)
        @Html.HiddenFor(m => m.Ticket.ServiceId)
        @Html.HiddenFor(m => m.Ticket.PlanSpanId)
        @Html.HiddenFor(m => m.RefLink)*@
        <div class="form-group">
            <label class="control-label col-md-2">Тип объекта</label>
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ArchiveObject.ObjectType, selectList: Model.ObjectTypes, htmlAttributes: new {@class = "form-control"}, optionLabel: "Выберите статус")
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Вид задания</label>
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ArchiveObject.ObjectType, selectList: Model.TaskTypes, htmlAttributes: new {@class = "form-control"}, optionLabel: "Выберите статус")
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Статус</label>
            <div class="col-md-8">
                    @Html.EditorFor(model => model.ArchiveObject.StatusStr, new {htmlAttributes = new {@class = "form-control disabled"}})
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Плошадь</label>

            <div class="col-md-8">
                @Html.EditorFor(model => model.ArchiveObject.Square, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Адрес</label>

            <div class="col-md-8">
                @Html.EditorFor(model => model.ArchiveObject.AddressStr, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
            </div>
        </div>
        <hr/>
        
        <button class="btn btn-outline-danger" type="reset" href="#">Измеить адрес</button>
        <hr/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <div class="btn-group" role="group" aria-label="...">
                        @if (User.IsInRole("admin") || User.IsInRole("superuser"))
                        {
                            <input type="submit" value="Сохранить" class="btn btn-outline-danger"/>
                        }
                        else
                        {
                            <input type="submit" value="Сохранить" disabled="disabled" class="btn btn-outline-danger"/>
                        }
                    <button class="back  btn btn-outline-success" type="reset" href="#">Отмена</button>
                </div>
            </div>
        </div>
    </div>
}


<script>
    @*
    $('.back').click(function () {
        var query = '@Model.RefLink';
        var f = query.replaceAll('&amp;','&');
        
       $(location).attr('href',f);
       //window.location.href = '@Model.RefLink'
    });

    $('#birthDate').val('@if (Model.Ticket.BirthDate.HasValue)
                         {
                             @Html.Encode(Model.Ticket.BirthDate.Value.ToString("yyyy-MM-dd"))
                         }');
                         *@
    
</script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>